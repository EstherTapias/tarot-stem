/* Contenedor principal del grid limitado a 1200px y centrado */
.gridContainer {
  width: 100%;
  max-width: 1200px;
  margin: 0 auto;
  padding: 20px;
}

/* Estadísticas del grid con fondo translúcido y bordes dorados */
.gridStats {
  background: var(--bg-glass);
  backdrop-filter: blur(20px);
  border: var(--border-golden);
  border-radius: 16px;
  padding: 20px;
  margin-bottom: 30px;
  box-shadow: var(--shadow-enchanted);
}

/* Contenido de estadísticas alineado horizontalmente */
.statsContent {
  display: flex;
  justify-content: center;
  gap: 30px;
  margin-bottom: 15px;
}

/* Cada estadística con icono y texto centrados */
.statItem {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 5px;
}

/* Iconos con tamaño y brillo místico animado */
.statIcon {
  font-size: 24px;
  color: var(--gold-mystical);
  filter: drop-shadow(0 0 8px currentColor);
  animation: float 3s ease-in-out infinite;
}

/* Texto de las estadísticas con fuente blanca y sombra */
.statLabel {
  font-size: 14px;
  font-weight: bold;
  color: var(--pearl-white);
  text-shadow: 0 1px 3px rgba(0, 0, 0, 0.8);
}

/* Barra de progreso con fondo oscuro y borde dorado */
.progressBar {
  width: 100%;
  height: 8px;
  background: rgba(0, 0, 0, 0.3);
  border-radius: 4px;
  overflow: hidden;
  margin-bottom: 10px;
  box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.3);
  border: 1px solid var(--gold-mystical);
}

/* Relleno de la barra con degradado y animación de brillo */
.progressFill {
  height: 100%;
  background: linear-gradient(90deg, var(--gold-mystical), var(--gold-copper));
  border-radius: 4px;
  transition: width 0.8s cubic-bezier(0.4, 0, 0.2, 1);
  box-shadow: var(--glow-mystical);
  position: relative;
}

.progressFill::after {
  content: '';
  position: absolute;
  top: 0; left: 0; right: 0; bottom: 0;
  background: linear-gradient(90deg, transparent, rgba(255,255,255,0.3), transparent);
  animation: progressShine 2s ease-in-out infinite;
}

/* Texto del progreso centrado y con color dorado */
.progressText {
  text-align: center;
  font-size: 12px;
  color: var(--gold-mystical);
  margin: 0;
  font-weight: 500;
}

/* Contenedor de las cartas en grid con espacio y justificado */
.cardsGrid {
  display: grid;
  gap: 25px;
  justify-content: center;
  align-items: start;
}

/* Configuraciones de columnas para cada tamaño de carta */
.cardsGrid.small {
  grid-template-columns: repeat(auto-fit, minmax(160px, 1fr));
  max-width: 800px;
  margin: 0 auto;
}

.cardsGrid.medium {
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  max-width: 1000px;
  margin: 0 auto;
}

.cardsGrid.large {
  grid-template-columns: repeat(auto-fit, minmax(240px, 1fr));
  max-width: 1200px;
  margin: 0 auto;
}

/* Contenedor de cada carta, con animación de aparición */
.cardWrapper {
  position: relative;
  display: flex;
  justify-content: center;
  flex-direction: column;
  align-items: center;
  opacity: 0;
  animation: cardAppear 0.8s ease-out forwards;
}

/* Oculta overlay del nombre para mostrar solo botón "Saber más" */
.cardWrapper .card .cardOverlay {
  display: none !important;
}

/* Estilo base para cartas dentro del grid */
.gridCard {
  width: 100%;
  max-width: none;
  transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
}

/* Estilos para cartas volteadas dentro del grid con sombras y aumento */
.gridCard.flipped {
  box-shadow: var(--shadow-hover);
  border-color: var(--gold-mystical);
  transform: translateY(-2px);
}

/* Fondo sólido consistente con Card.css */
.gridCard .card {
  background: var(--forest-deep) !important;
}

/* Fondos sólidos para imágenes y cartas volteadas */
.gridCard .cardImage,
.gridCard.flipped .cardImage {
  background: var(--forest-deep) !important;
  background-color: var(--forest-deep) !important;
}

.gridCard .image,
.gridCard.flipped .image {
  background: var(--forest-deep) !important;
  background-color: var(--forest-deep) !important;
  display: block;
}

/* Específicos para cartas volteadas científicas en grid */
.gridCard.flipped {
  background: var(--forest-deep) !important;
}

.gridCard.flipped .cardImage {
  background: var(--forest-deep) !important;
  background-color: var(--forest-deep) !important;
}

.gridCard.flipped .image {
  background: var(--forest-deep) !important;
  background-color: var(--forest-deep) !important;
  object-fit: cover;
  object-position: center;
  filter: brightness(0.95) contrast(1.15) saturate(1.05);
}

/* Hover especial para imágenes de cartas volteadas en grid */
.gridCard.flipped:hover .image {
  transform: scale(1.05);
  filter: brightness(1) contrast(1.25) saturate(1.1);
}

/* Indicador visual de la posición de la carta */
.cardPosition {
  position: absolute;
  bottom: -8px;
  left: 50%;
  transform: translateX(-50%);
  background: rgba(0, 0, 0, 0.8);
  color: var(--gold-mystical);
  font-size: 10px;
  font-weight: bold;
  padding: 2px 6px;
  border-radius: 8px;
  border: 1px solid var(--gold-mystical);
  backdrop-filter: blur(5px);
  z-index: 10;
}

/* Indicador del estado flip con animación de pulso */
.flipStatus {
  position: absolute;
  top: -8px;
  right: -8px;
  background: linear-gradient(135deg, var(--gold-mystical), var(--gold-copper));
  color: var(--forest-deep);
  width: 24px;
  height: 24px;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 12px;
  border: 2px solid rgba(255, 255, 255, 0.3);
  box-shadow: var(--shadow-enchanted);
  z-index: 10;
  animation: flipPulse 2s ease-in-out infinite;
}

/* Contenedor para estado de carga, centrando contenido y texto */
.loadingContainer {
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: 60px 20px;
  text-align: center;
}

/* Animación del spinner usando símbolo místico */
.loadingSpinner {
  font-size: 4rem;
  animation: float 2s ease-in-out infinite;
  margin-bottom: 20px;
  color: var(--gold-mystical);
  filter: drop-shadow(0 0 20px var(--gold-mystical));
}

/* Texto de carga centrado y con sombra */
.loadingText {
  font-size: 18px;
  color: var(--pearl-white);
  margin-bottom: 40px;
  font-weight: 500;
  text-shadow: 0 1px 3px rgba(0, 0, 0, 0.8);
}

/* Esqueleto animado para mostrar mientras carga */
.loadingSkeleton {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  gap: 25px;
  width: 100%;
  max-width: 1000px;
}

/* Tarjeta del esqueleto con fondo translúcido y animación */
.skeletonCard {
  background: var(--bg-glass);
  border: var(--border-golden);
  border-radius: 12px;
  padding: 12px;
  height: 350px;
  animation: skeletonPulse 2s ease-in-out infinite;
  backdrop-filter: blur(5px);
}

/* Imagen dentro del esqueleto con efecto de brillo animado */
.skeletonImage {
  width: 100%;
  height: 60%;
  border-radius: 8px;
  margin-bottom: 12px;
  background: linear-gradient(90deg, rgba(212, 175, 55, 0.1), rgba(212, 175, 55, 0.2), rgba(212, 175, 55, 0.1));
  background-size: 200% 100%;
  animation: shimmer 2s infinite;
}

/* Texto animado para los placeholders */
.skeletonText,
.skeletonSubtext {
  background: linear-gradient(90deg, rgba(212, 175, 55, 0.1), rgba(212, 175, 55, 0.2), rgba(212, 175, 55, 0.1));
  border-radius: 4px;
  background-size: 200% 100%;
  animation: shimmer 2s infinite;
}

/* Alturas y anchos del texto esqueleto */
.skeletonText {
  height: 16px;
  width: 80%;
  margin: 0 auto 8px;
}

.skeletonSubtext {
  height: 12px;
  width: 60%;
  margin: 0 auto;
}

/* Estado vacío para mostrar mensaje cuando no hay cartas */
.emptyState {
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: 80px 20px;
  text-align: center;
}

/* Icono grande flotante para el estado vacío */
.emptyIcon {
  font-size: 4rem;
  margin-bottom: 20px;
  animation: float 3s ease-in-out infinite;
  color: var(--gold-mystical);
  filter: drop-shadow(0 0 15px var(--gold-mystical));
}

/* Título del estado vacío con sombra y tamaño */
.emptyTitle {
  font-size: 24px;
  color: var(--pearl-white);
  margin-bottom: 10px;
  font-weight: bold;
  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.8);
}

/* Texto explicativo del estado vacío */
.emptyText {
  font-size: 16px;
  color: var(--gold-mystical);
  max-width: 400px;
  line-height: 1.5;
  margin: 0;
}

/* Pie de página del grid con fondo traslúcido y bordes dorados */
.gridFooter {
  margin-top: 40px;
  text-align: center;
  padding: 20px;
  background: var(--bg-glass);
  border-radius: 12px;
  border: var(--border-golden);
  backdrop-filter: blur(5px);
}

/* Contenido máximo centrado en el footer */
.footerContent {
  max-width: 600px;
  margin: 0 auto;
}

/* Texto principal del footer con sombra y tipo */
.footerText {
  font-size: 14px;
  color: var(--pearl-white);
  margin: 0 0 8px 0;
  font-weight: 500;
  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.8);
}

/* Subtexto del footer más pequeño y con transparencias */
.footerSubtext {
  font-size: 12px;
  color: var(--gold-mystical);
  margin: 0;
  opacity: 0.8;
}

/* Animaciones usadas en todo el grid */

/* Animación para aparición de cartas */
@keyframes cardAppear {
  from { opacity: 0; transform: translateY(30px) scale(0.9); }
  to { opacity: 1; transform: translateY(0) scale(1); }
}

/* Movimiento flotante y rotatorio suave para iconos */
@keyframes float {
  0%, 100% { transform: translateY(0px) rotate(0deg); }
  50% { transform: translateY(-10px) rotate(2deg); }
}

/* Pulsación para el icono de flip */
@keyframes flipPulse {
  0%, 100% { transform: scale(1); box-shadow: var(--shadow-enchanted); }
  50% { transform: scale(1.1); box-shadow: var(--glow-mystical); }
}

/* Brillo animado en barra de progreso */
@keyframes progressShine {
  0% { transform: translateX(-100%); }
  100% { transform: translateX(100%); }
}

/* Pulso en animación esqueletal */
@keyframes skeletonPulse {
  0%, 100% { opacity: 0.6; }
  50% { opacity: 1; }
}

/* Animación de brillo para los skeletons */
@keyframes shimmer {
  0% { background-position: -200% 0; }
  100% { background-position: 200% 0; }
}

/* Diseño responsive para tabletas y móviles */
@media (max-width: 1024px) {
  .cardsGrid.small { grid-template-columns: repeat(auto-fit, minmax(140px, 1fr)); gap: 20px; }
  .cardsGrid.medium { grid-template-columns: repeat(auto-fit, minmax(180px, 1fr)); gap: 20px; }
  .cardsGrid.large { grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 20px; }
  .statsContent { gap: 20px; }
  .statIcon { font-size: 20px; }
}

@media (max-width: 768px) {
  .gridContainer { padding: 15px; }
  .cardsGrid.small, .cardsGrid.medium, .cardsGrid.large { grid-template-columns: repeat(auto-fit, minmax(160px, 1fr)); gap: 15px; }
  .gridStats { padding: 15px; margin-bottom: 20px; }
  .statsContent { flex-direction: row; gap: 15px; }
  .statIcon { font-size: 18px; }
  .statLabel { font-size: 12px; }
  .loadingSkeleton { grid-template-columns: repeat(auto-fit, minmax(160px, 1fr)); gap: 15px; }
  .skeletonCard { height: 300px; }
}

@media (max-width: 480px) {
  .gridContainer { padding: 10px; }
  .cardsGrid.small, .cardsGrid.medium, .cardsGrid.large { grid-template-columns: repeat(auto-fit, minmax(140px, 1fr)); gap: 12px; }
  .statsContent { gap: 10px; }
  .statIcon { font-size: 16px; }
  .statLabel { font-size: 11px; }
  .progressText { font-size: 11px; }
  .loadingText { font-size: 16px; }
  .loadingSpinner { font-size: 3rem; }
  .emptyIcon { font-size: 3rem; }
  .emptyTitle { font-size: 20px; }
  .emptyText { font-size: 14px; }
}
